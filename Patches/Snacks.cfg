SKILL_LOSS_CONDITION:NEEDS[SnacksStress]
{
	name = Exercising
}

SKILL_LOSS_CONDITION:NEEDS[SnacksStress]
{
	name = Cooking
}

SKILL_LOSS_CONDITION:NEEDS[SnacksStress]
{
	name = Meeting
}

SKILL_LOSS_CONDITION:NEEDS[SnacksStress]
{
	name = Fishing
}

SKILL_LOSS_CONDITION:NEEDS[SnacksStress]
{
	name = Sleeping
}

SKILL_LOSS_CONDITION:NEEDS[SnacksStress]
{
	name = Recuperating
}

@PART[wbiGreenhouseModule]:NEEDS[SnacksUtils]
{
	MODULE
	{
		name = SnacksConverter
		ConverterName = Hydroponics
		StartActionName = Start Hydroponics
		StopActionName = Stop Hydroponics
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1
		hoursPerCycle = 168 //Number of hours to grow crops
		minimumSuccess = 1
		criticalSuccess = 90
		criticalFail = 5

		criticalSuccessBonus = 0.25
		failureLoss = 0.25

		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.0000218750
		}

		INPUT_RESOURCE:NEEDS[SnacksFreshAir]
		{
			ResourceName = StaleAir
			Ratio = 0.0000218750
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 12
		}

		OUTPUT_RESOURCE:NEEDS[SnacksFreshAir]
		{
			ResourceName = FreshAir
			Ratio = 0.00002
		}

		// Calibrated for 1 snack per meal, 3 meals per day
		// Supports 2 kerbals
		YIELD_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 168
		}
	}

	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Gardening
		StartActionName = Start Gardening
		StopActionName = Stop Gardening
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Gardening

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.25
		}
	}

	RESOURCE
	{
		name = Snacks
		amount = 168
		maxAmount = 168
		isTweakable = true
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 168
		isTweakable = true
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 28
		maxAmount = 28
		isTweakable = true
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 28
		isTweakable = true
	}
}

@PART[wbiHabitatModule]:NEEDS[SnacksUtils]
{
	//This is calibrated for 4 kerbals at 100% efficiency when then consume
	//1 snack per meal and 1 meal per day.
	//In game, the player can adjust the efficiency of the recycler from 10% to 100%.
	//Given the dynamic nature, the input/output ratio is ALWAYS set to 0.00004630,
	//which gives a daily input/output of 1.00008 per day. The recycler will then adjust
	//the input/output ratio based upon RecyclerCapacity and recycler efficiency.
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 2
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 6
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	MODULE:NEEDS[SnacksFreshAir]
	{
		name = SnacksConverter
		ConverterName = Air Scrubber
		StartActionName = Start Air Scrubber
		StopActionName = Stop Air Scrubber
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		INPUT_RESOURCE
		{
			ResourceName = StaleAir
			Ratio = 0.00037
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = FreshAir
			Ratio = 0.000148
			FlowMode = ALL_VESSEL
		}
	}

	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Entertainment Center
		StartActionName = Start Entertainment
		StopActionName = Stop Entertainment
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = true

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Relaxing

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.25
		}
	}

	RESOURCE
	{
		name = Snacks
		amount = 42
		maxAmount = 42
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 42
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 14
		maxAmount = 14
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 14
	}
}

@PART[wbiBriefingModule]:NEEDS[SnacksUtils]
{
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Meeting
		StartActionName = Start Meeting
		StopActionName = Stop Meeting
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Meeting

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		//Works like an OUTPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_OUTPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.25
		}
	}

	RESOURCE
	{
		name = Snacks
		amount = 42
		maxAmount = 42
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 42
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 14
		maxAmount = 14
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 14
	}
}

@PART[wbiShortGymModule]:NEEDS[SnacksUtils]
{
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Exercise Equipment
		StartActionName = Start Exercising
		StopActionName = Stop Exercising
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Exercising

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.25
		}
	}

	RESOURCE
	{
		name = Snacks
		amount = 21
		maxAmount = 21
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 7
		maxAmount = 7
	}
}

@PART[wbiShortPassengerModule]:NEEDS[SnacksUtils]
{
	RESOURCE
	{
		name = Snacks
		amount = 21
		maxAmount = 21
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 7
		maxAmount = 7
	}
}

@PART[wbiShortDockingModule]:NEEDS[SnacksUtils]
{
	RESOURCE
	{
		name = Snacks
		amount = 21
		maxAmount = 21
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 7
		maxAmount = 7
	}
}

@PART[wbiShortGalleyModule]:NEEDS[SnacksUtils]
{
	//This is calibrated for 4 kerbals at 100% efficiency when then consume
	//1 snack per meal and 1 meal per day.
	//In game, the player can adjust the efficiency of the recycler from 10% to 100%.
	//Given the dynamic nature, the input/output ratio is ALWAYS set to 0.00004630,
	//which gives a daily input/output of 1.00008 per day. The recycler will then adjust
	//the input/output ratio based upon RecyclerCapacity and recycler efficiency.
	MODULE
	{
		name = SoilRecycler
		ConverterName = Soil Recycler
		StartActionName = Start Soil Recycler
		StopActionName = Stop Soil Recycler
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = true
		SpecialistEfficiencyFactor = 0.2
		UseSpecializationBonus = true
		SpecialistEfficiencyFactor = 0.1
		ExperienceEffect = ScienceSkill
		EfficiencyBonus = 1.0
		RecyclerCapacity = 2
	 
		INPUT_RESOURCE
		{
			ResourceName = Soil
			Ratio = 0.000034723
			FlowMode = ALL_VESSEL
  		}

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 6
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	// WITH Stress
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Make Sushi
		StartActionName = Start Making Sushi
		StopActionName = Stop Making Sushi
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Cooking

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = Fish
			Ratio = 0.01
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.01
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.25
		}
	}

	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Galley
		StartActionName = Start Cooking
		StopActionName = Stop Cooking
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Cooking

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.00034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.25
		}
	}

	// WITHOUT Stress
	MODULE:NEEDS[!SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Make Sushi
		StartActionName = Start Making Sushi
		StopActionName = Stop Making Sushi
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = Fish
			Ratio = 0.01
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.01
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	MODULE:NEEDS[!SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Galley
		StartActionName = Start Cooking
		StopActionName = Stop Cooking
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 0.2
			FlowMode = ALL_VESSEL
		}

		INPUT_RESOURCE
		{
			ResourceName = Ore
			Ratio = 0.000034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}

		OUTPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.00034723
			DumpExcess = false
			FlowMode = ALL_VESSEL
		}
	}

	RESOURCE
	{
		name = Snacks
		amount = 42
		maxAmount = 42
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 14
		maxAmount = 14
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 42
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 14
		maxAmount = 14
	}
}

@PART[wbiShortAquariumModule]:NEEDS[SnacksStress]
{
	@MODULE[ModuleResourceConverterExtended]
	{
		@name = SnacksConverter
		
		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Fishing

		//Works like an INPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 1.25
		}
	}

	@MODULE[ModuleResourceConverterExtended],2
	{
		@hoursPerCycle = 60

		INPUT_RESOURCE
		{
			ResourceName = Snacks
			Ratio = 0.00034723
			FlowMode = ALL_VESSEL
		}
	}
}

@PART[wbiLabModule,wbiGeologyModule,wbiWorkshopModule,wbiAirlockModule,wbiExplorationModule,wbiBuffaloCommandPod,wbiStateroomModule,wbiObservationModule,wbiGuppyCommandPod]:NEEDS[SnacksUtils]
{
	RESOURCE
	{
		name = Snacks
		amount = 42
		maxAmount = 42
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 14
		maxAmount = 14
	}
}

@PART[wbiGreenhouseModule]:NEEDS[SnacksUtils,ClassicStock]
{
	@MODULE[SnacksConverter]
	{
		!INPUT_RESOURCE:HAS[#ResourceName[Ore]]{}

		INPUT_RESOURCE
		{
			ResourceName = Water
			Ratio = 0.0000218750
		}

		INPUT_RESOURCE
		{
			ResourceName = Compost
			Ratio = 0.000072917
		}
	}

	RESOURCE
	{
		name = Compost
		amount = 50
		maxAmount = 50
		isTweakable = true
	}

	RESOURCE
	{
		name = Water
		amount = 50
		maxAmount = 50
		isTweakable = true
	}
}

@PART[wbiStateroomModule]:NEEDS[SnacksUtils]
{
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Sleeping
		StartActionName = Start Sleeping
		StopActionName = Stop Sleeping
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Sleeping

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 2
			FlowMode = ALL_VESSEL
		}

		//Works like an INTPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INTPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 2
		}
	}

	RESOURCE
	{
		name = Snacks
		amount = 42
		maxAmount = 42
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 42
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 14
		maxAmount = 14
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 14
	}
}

@PART[wbiSickbayModule]:NEEDS[SnacksUtils]
{
	MODULE:NEEDS[SnacksStress]
	{
		name = SnacksConverter
		ConverterName = Recuperating
		StartActionName = Start Recuperating
		StopActionName = Stop Recuperating
		AutoShutdown = false
		GeneratesHeat = false
		UseSpecialistBonus = false
		
		//At least one crew needs to be in the part to run the converter.
		minimumCrew = 1

		//Connection back home required to receive entertainment.
		requiresHomeConnection = false

		//This condition is set whenever the kerbal enters the part and the converter is active, and
		//when the converter is started. Since it's registered as a SKILL_LOSS_CONDITION, the kerbals will lose their
		//skills while the converter is running.
		conditionSummary = Recuperating

		INPUT_RESOURCE
		{
			ResourceName = ElectricCharge
			Ratio = 2
			FlowMode = ALL_VESSEL
		}

		//Works like an INTPUT_RESOURCE except:
		// It applies to individual kerbals.
		// You can specify an AmountPerDay or AmountPerSecond.
		ROSTER_INTPUT_RESOURCE
		{
			ResourceName = Stress

			//AmountPerDay will be translated into: AmountPerDay / seconds per homeworld day
			//This will override AmountPerSecond if it is defined in the node.
			AmountPerDay = 6
		}
	}

	RESOURCE
	{
		name = Snacks
		amount = 42
		maxAmount = 42
	}

	RESOURCE
	{
		name = Soil
		amount = 0
		maxAmount = 42
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = FreshAir
		amount = 14
		maxAmount = 14
	}

	RESOURCE:NEEDS[SnacksFreshAir]
	{
		name = StaleAir
		amount = 0
		maxAmount = 14
	}
}