PART:NEEDS[WildBlueIndustries/001KerbalActuators]
{
	name = wbiSize1TiltRotor
	module = Part
	author = Angel-125

	MODEL
	{
		model = WildBlueIndustries/Buffalo2/Parts/Engine/tiltRotor/tiltRotor
	}

	rescaleFactor = 1

	node_attach = 0.0, 0.0, 0.0, 1, 0, 0

	TechRequired = advAerodynamics
	entryCost = 40000
	cost = 1400
	category = Engine
	subcategory = 0
	title = #LOC_BUFFALO_size1TiltRotorName // TR-22 "Thunderbolt" Tiltrotor
	manufacturer = Wild Blue Industries
	description = #LOC_BUFFALO_size1TiltRotorDesc // The tiltrotor engine can pivot its prop-rotors upwards for VTOL flight and forwards for high-speed flight. The prop-rotors can be folded up for compact storage. The engine can also switch between jet turbine mode, which requires an oxygenated atmosphere, and electric mode, which can operate in any atmosphere.
	attachRules = 0,1,1,1,0
	mass = 1.5
	heatConductivity = 0.06 // half default
	skinInternalConductionMult = 4.0
	emissiveConstant = 0.8 // engine nozzles are good at radiating.
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 7
	maxTemp = 2000 // = 3600
	bulkheadProfiles = size1
	tags = aircraft tiltrotor plane propuls reverse (osprey

	MODULE
	{
		name = ModuleResourceIntake
		resourceName = IntakeAir
		checkForOxygen = true
		area = 0.2
		intakeSpeed = 50
		intakeTransformName = Intake
		machCurve
		{
			key = 1 1 0 0
			key = 1.5 0.9 -0.4312553 -0.4312553
			key = 2.5 0.45 -0.5275364 -0.5275364
			key = 3.5 0.1 0 0
		}
	}

	MODULE
	{
		name = ModuleResourceIntake
		resourceName = Atmosphere
		checkForOxygen = false
		area = 0.2
		intakeSpeed = 50
		intakeTransformName = Intake
		occludeNode = top
		machCurve
		{
			key = 1 1 0 0
			key = 1.5 0.9 -0.4312553 -0.4312553
			key = 2.5 0.45 -0.5275364 -0.5275364
			key = 3.5 0.1 0 0
		}
	}

	MODULE
	{
		name = MultiModeEngine
		primaryEngineID = JetTurbine
		secondaryEngineID = ElectricMotor
		carryOverThrottle = True
		autoSwitchAvailable = False
		primaryEngineModeDisplayName = #LOC_BUFFALO_tiltRotorVariantJet // Jet Turbine
		secondaryEngineModeDisplayName = #LOC_BUFFALO_tiltRotorVariantElectric // Electric Motor
	}

	MODULE
	{
		name = ModuleEnginesFX
		engineID = JetTurbine
		thrustVectorTransformName = thrustTransform
		exhaustDamage = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 150
		heatProduction = 0
		useEngineResponseTime = True
		engineAccelerationSpeed = 0.5
		engineDecelerationSpeed = 0.5
		fxOffset = 0, 0, 0.74
		flameoutEffectName = flameout
		engageEffectName = engage
		disengageEffectName = disengage
		spoolEffectName = running_turbine
		engineSpoolIdle = 0.05
		engineSpoolTime = 3.0
		EngineType = Turbine
		disableUnderwater = true

		PROPELLANT
		{
			name = IntakeAir
			ignoreForIsp = True
			ratio = 15
		}
		PROPELLANT
		{
			name = LiquidFuel
			resourceFlowMode = STAGE_STACK_FLOW_BALANCE
			ratio = 1
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 10500 0 0
		}

		// Jet params
		atmChangeFlow = True
		useVelCurve = True
		useAtmCurve = True
		flameoutBar = 0.02
		flowCapMult = 1.0
		machLimit = 0.85
		machHeatMult = 25
		velCurve
		{
			key = 0 0.9 0 5
			key = 0.1 1.2 1 2
			key = 0.2 1.3 0 1.3
			key = 0.3 1.3 0 0
			key = 0.4 1.25 -1 0
			key = 0.5 1 -3.8 -2
			key = 0.6 0 3 0
			key = 0.7 -0.1 1 0
		}
		atmCurve
		{
			key = 0 0 0 0
			key = 0.2 0.15 2 1.5
			key = 0.4 0.55 2 2
			key = 0.6 0.69 0.5 0.6
			key = 0.8 0.8 1 1
			key = 1 1 0 0
		}
	}

	MODULE
	{
		name = ModuleEnginesFX
		engineID = ElectricMotor
		thrustVectorTransformName = thrustTransform
		exhaustDamage = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 150
		heatProduction = 0
		useEngineResponseTime = True
		engineAccelerationSpeed = 0.5
		engineDecelerationSpeed = 0.5
		fxOffset = 0, 0, 0.74
		flameoutEffectName = flameout
		engageEffectName = engage
		disengageEffectName = disengage
		spoolEffectName = running_electric
		engineSpoolIdle = 0.05
		engineSpoolTime = 3.0
		EngineType = Electric

		PROPELLANT
		{
			name = Atmosphere
			ratio = 15
		}
		PROPELLANT
		{
			name = ElectricCharge
			ratio = 25
			DrawGauge = True
		}
		atmosphereCurve
		{
			key = 0 100 0 0 
		}
		// Jet params
		atmChangeFlow = True
		useVelCurve = True
		useAtmCurve = True
		flameoutBar = 0.02
		flowCapMult = 1.0
		machLimit = 0.85
		machHeatMult = 25
        	velCurve
	        {
	            key = 0 0.9 0 5
	            key = 0.1 1.2 1 2
	            key = 0.2 1.3 0 1.3
	            key = 0.3 1.3 0 0
	            key = 0.4 1.25 -1 0
	            key = 0.5 1 -3.8 -2
	            key = 0.6 0 3 0
	            key = 0.7 -0.1 1 0
	        }
	        atmCurve
	        {
	            key = 0 0 0 0
	            key = 0.2 0.15 2 1.5
	            key = 0.4 0.55 2 2
	            key = 0.6 0.69 0.5 0.6
	            key = 0.8 0.8 1 1
	            key = 1 1 0 0
	        }
	}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 3
		fxMax = 0.5
		maxDistance = 30
		falloff = 1 //2
		thrustTransformName = thrustTransform
	}

	MODULE
	{
		name = ModuleSurfaceFX
		thrustProviderModuleIndex = 4
		fxMax = 0.5
		maxDistance = 30
		falloff = 1 //2
		thrustTransformName = thrustTransform
	}

	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = Deploy
		startEventGUIName = Fold Rotors
		endEventGUIName = Unfold Rotors
		actionGUIName = Fold/Unfold Rotors
	}

	MODULE
	{
		name = WBIHoverController

		//We'll use the toolbar app button to control VTOL operations.
		guiVisible = true

		//How many m/sec to increase/decrease vertical speed per increment.
		verticalSpeedIncrements = 1.0
	}

	MODULE
	{
		//This module handles mesh rotation operations such as an engine nacelle pivot.
		name = WBIRotationController

		//(Optional, defaults to Actuator) User-friendly name of the rotation controller.
		rotatorName = Actuator

		//(Optional, defaults to Engine) Group ID for the actuator. Allows you to differentiate
		//between the VTOL manager (which uses the Engine group), and, say, a robot arm manager.
		groupID = Engine

		//We'll use the toolbar app button to control VTOL operations.
		//(defaults to true, so we have the buttons in the right-click menu)
		guiVisible = true

		//Name of the pivot
		rotationMeshName = EnginePivot

		//Rotation axis of the pivot
		rotationMeshAxis = -1,0,0

		//How fast to rotate the pivot
		rotationDegPerSec = 15

		//Maximum rotation angle
		//From 0 to 360 degrees
		//Min --- Neutral (0) --- Max
		//NOTE: if maxRotateAngle & minRotateAngle are -1 (which is the default),
		//then the rotation pivot can go 360 degrees.
		maxRotateAngle = 90

		//Minimum rotation angle (0 to 360 degrees)
		minRotateAngle = 0

		//Can we rotate to minimum?
		//Ex: tilt-rotor can pivot up and forward and that's it.
		canRotateMin = false

		//Can we rotate to maximum?
		canRotateMax = true

		//Name of the rotate to maximum button (only applies if gui buttons are visible)
		rotateMaxName = Rotate Vertical
	
		//Name of the rotate to minimum button (only applies if gui buttons are visible)
//		rotateMinName = Rotate To Minimum

		//Name of the rotate to neutral button (only applies if gui buttons are visible)
		rotateNeutralName = Rotate Horizontal
	}

	//If you want to subscribe to the WBIRotationController's events, then
	//add this module AFTER you add WBIRotationController. Great for detecting when
	//the user toggles the mirror on an engine, for instance.
	MODULE
	{
		name = WBIPropSpinner

		//We'll use the toolbar app button to control propeller operations.
		guiVisible = true

		//Name of the non-blurred rotor
		//The whole thing spins
		//Your hierarchy should have:
		//Rotor
		//---Hub: gets spun even when blades are blurred.
		//---Standard Blades (Optional): spun along with the hub
		//---Mirrored Blades (Optional): spun along with the hub
		rotorTransformName = Rotor

		//(Optional) To properly mirror the engine, these parameters specify
		//the standard and mirrored (symmetrical) rotor blade transforms.
		//If included, they MUST be child meshes of the mesh specified by rotorTransformName.
		standardBladesName = RotorBlades
		mirrorBladesName = RotorBladesMirrored

		//Rotations per minute for the non-blurred rotor
		rotorRPM = 30

	        //How fast to spin the rotor when blurred; multiply rotorRPM by blurredRotorFactor
		//When rotors are blurred, the hub is not; it's spun at high speed.
		blurredRotorFactor = 4.0

		//How fast to spool up to RPM
		rotorSpoolTime = 3.0

		//Rotation axis for both the non-blurred rotor and the blurred rotor
		rotorRotationAxis = 0,0,1

		//(Optional) Name of the blurred rotor
		//Blurred rotors should NOT be part of the Rotor hierarchy.
		//For the tilt-rotor, they are a child of EnginePivot.
		blurredRotorName = BlurredRotor

		//How fast to spin the blurred rotor
		blurredRotorRPM = 6

		//At what percentage of thrust to switch to the blurred rotor/mesh rotor.
		minThrustRotorBlur = 20
	}

	MODULE
	{
		name = ModuleAlternator	
		engineName = JetTurbine
		outputName = Generator
		outputUnits = EG/s
		RESOURCE
		{
			name = ElectricCharge
			rate = 5.0
		}
	}

	MODULE
	{
		name = ModuleAlternator	
		engineName = JetTurbine
		outputName = Compressor
		outputUnits = U/s
		RESOURCE
		{
			name = Atmosphere
			rate = 5.0
		}
	}

	MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 15
		YawTorque = 15
		RollTorque = 15
		torqueResponseSpeed = 15
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.45
		}
	}

	RESOURCE
	{
		name = IntakeAir
		amount = 75
		maxAmount = 75
	}

	RESOURCE
	{
		name = Atmosphere
		amount = 75
		maxAmount = 75
	}

	MODULE
	{
		name = ModuleTestSubject
		useStaging = True
		useEvent = True
		situationMask = 15
		CONSTRAINT
		{
			type = OXYGEN
			value = True
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 200
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 100
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 100
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 50
			prestige = Significant
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = LT
			value = 50
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEEDENV
			test = GT
			value = 20
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = SPEED
			test = LT
			value = 300
			situationMask = 8
		}
		CONSTRAINT
		{
			type = SPEED
			test = GT
			value = 50
			situationMask = 8
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.3
			situationMask = 8
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.1
			situationMask = 8
			prestige = Significant
		}
		CONSTRAINT
		{
			type = DENSITY
			test = GT
			value = 0.05
			situationMask = 8
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 4000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 8000
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 1000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 2000
			prestige = Significant
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = GT
			value = 500
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = ALTITUDEENV
			test = LT
			value = 1000
			prestige = Exceptional
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ALWAYS
			prestige = Trivial
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = BODYANDSITUATION
			prestige = Significant
		}
		CONSTRAINT
		{
			type = REPEATABILITY
			value = ONCEPERPART
			prestige = Exceptional
		}
	}

	EFFECTS
	{		
		running_turbine
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Buffalo2/FX/OspreyRotorsJet
				volume = 0.0 0.0
				volume = 0.05 0.7
				volume = 1.0 1.0
				pitch = 0.0 0.4
				pitch = 0.05 0.5
				pitch = 1.0 1.0
				loop = true
			}
			PREFAB_PARTICLE
			{
				prefabName = fx_smokeTrail_light
				transformName = engineExhaust
				emission = 0.0 0.0
				emission = 0.05 0.0
				emission = 0.075 0.25
				emission = 1.0 1.25
				speed = 0.0 0.25
				speed = 1.0 1.0
				localOffset = 0, 0, 1
				localRotation = 1, 0, 0, -90
			}				
		}

		running_electric
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Buffalo2/FX/OspreyRotorsNoJet
				volume = 0.0 0.0
				volume = 0.05 0.7
				volume = 1.0 1.0
				pitch = 0.0 0.4
				pitch = 0.05 0.5
				pitch = 1.0 1.0
				loop = true
			}
		}

		engage
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Buffalo2/FX/OspreyStart
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
		disengage
		{
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Buffalo2/FX/OspreyStop
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
		flameout
		{
			PREFAB_PARTICLE
			{
				prefabName = fx_exhaustSparks_flameout_2
				transformName = smokePoint
				oneShot = true
			}
			AUDIO
			{
				channel = Ship
				clip = WildBlueIndustries/Buffalo2/FX/OspreyStop
				volume = 1.0
				pitch = 2.0
				loop = false
			}
		}
	}
}
